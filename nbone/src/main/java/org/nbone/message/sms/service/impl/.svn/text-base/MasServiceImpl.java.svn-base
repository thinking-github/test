package com.sgcc.hst.ws.notice.sms.service.impl;

import java.io.Serializable;
import java.util.List;

import org.apache.commons.lang.StringUtils;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import com.sgcc.hst.SpringContextUtil;
import com.sgcc.hst.ws.notice.sms.exception.SmsException;
import com.sgcc.hst.ws.notice.sms.service.IMasService;
import com.sgcc.hst.ws.notice.sms.service.IUseSmsService;
import com.sgcc.hst.ws.notice.sms.vo.SmsVo;

/**
 *功能说明:向短信平台发送短信接口实现
 *
 *@author Thinking  2013-9-10 下午8:40:50 <br>
 *
 *Copyright (c)2013 thinking-版权所有
 */
public class MasServiceImpl implements IMasService,Serializable {
	
	private static final long serialVersionUID = -1902950910495127027L;
	private static final Log log = LogFactory.getLog(MasServiceImpl.class);
	private static final String TIP = "短信发送-";
	
	public void submitSmsReqList(List<SmsVo> listsmsVo) {
		try{
			if(listsmsVo == null){
				log.error(new StringBuilder().append(TIP).append("MAS_传入参数为空"));
				return ;
			}
			for(SmsVo smsVo:listsmsVo){
					submitSmsReq(smsVo);
			}
		}catch(Exception e){
			log.error(new StringBuilder().append(TIP).append("MAIL_遍历短信出现异常"), e);
		}
	}
	
	public void submitSmsReq(SmsVo smsVo) throws SmsException {
		
		if(smsVo == null ){
			log.error(new StringBuilder().append(TIP).append("bean SmsVo is null .thinking"));
			return ;
		}
		
		List<String> phoneList  = smsVo.getUserNumberList();
		String content  =  smsVo.getSmsContent();
		int phoneSize  = phoneList.size();
		if(phoneList == null || phoneSize <= 0){
			log.error(new StringBuilder().append(TIP).append("发送短信用户列表为空."));
			return ;
		}
		
		if(StringUtils.isEmpty(content)){
			log.error(new StringBuilder().append(TIP).append("短信内容为空."));	
			return ;
		}
		
		IUseSmsService useSmsService =  SpringContextUtil.getBean("useSmsService");
	    useSmsService.send(smsVo);
	
	}

}