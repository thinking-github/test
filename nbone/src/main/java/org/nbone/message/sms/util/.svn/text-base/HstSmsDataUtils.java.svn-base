package com.sgcc.hst.ws.notice.sms.util;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import com.chinagdn.ws.Header;
import com.chinagdn.ws.SubmitSmsReq;
import com.chinagdn.ws.SubmitSmsResp;
import com.sgcc.hst.common.systemconfig.util.IntegratedSysConfigPropsUtil;
import com.sgcc.hst.ws.common.util.AxisHstUtils;
import com.sgcc.hst.ws.common.util.Constant;
import com.sgcc.hst.ws.common.util.HexString;
import com.sgcc.hst.ws.common.util.XMLConvertUtil;
/**
 * 会管系统发送短信实现
 * @author Thinking
 *
 */
public class HstSmsDataUtils {
	private static final Log log = LogFactory.getLog(HstSmsDataUtils.class);
	private static String serviceId = "099959";//serviceID
	private static String version = "V1.0.1";//版本
	
	public static  SubmitSmsResp send(String smsContent,List<String> userNumberList){
		SubmitSmsReq req =createEntity(smsContent, userNumberList);
		SubmitSmsResp submitSmsResp = null ;
		try {
			 submitSmsResp = (SubmitSmsResp) AxisHstUtils.invokeMasClient(Constant.SMS_SUBMITSMS,req);
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		return submitSmsResp;
	}
	public static  SubmitSmsReq createEntity(String smsContent,List<String> userNumberList){
		
		SubmitSmsReq req = new SubmitSmsReq();
		req.setHeader(createHeader());
		req.setBody(HexString.encode(createBody(smsContent,userNumberList)));
		
		return req;
	}
	
	
	/**
	 *功能说明:创建消息头
	 *创建人:姜宗辉
	 *创建时间:2013-9-14 上午10:06:14
	 *@return Header 
	 */
	public static  Header createHeader(){
		Header header = new Header();
		try {
			header.setMsgType(Constant.SMS_SUBMITSMSREQ);
			header.setServiceID(IntegratedSysConfigPropsUtil.getString("sms_serviceId", serviceId));
			header.setTimeStamp(getCurrentTimeForms());
			header.setTransationID(timeMillisForSid16());
			header.setVersion(IntegratedSysConfigPropsUtil.getString("sms_version", version));
		} catch (Exception e) {
			log.error("MAS_获取消息头体出现异常", e);
		}
		return header;
	}
	public static String getCurrentTimeForms() {
		SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMddHHmmssSSS");
		return sdf.format(new Date());
	}
	
	public static String timeMillisForSid16() {
		//目前时间戳为13位
		String sid = System.currentTimeMillis() + "";
		int len = sid.length() - 16;
		if (len > 0) {
			sid = sid.substring(len, len + 16);
		} else if (len < 0) {
			for (int i = 0; i < Math.abs(len); i++) {
				sid = "0" + sid;
			}
		}
		return sid;
	}
	
	
	public static  String createBody(String smsContent,List<String> userNumberList) {

		StringBuffer sb = new StringBuffer();
		// 发送号码
		sb.append("<Body>");
		sb.append("<ServiceNumber>");
		sb.append(IntegratedSysConfigPropsUtil.getString("sms_serviceId", serviceId));
		sb.append("</ServiceNumber>");
		// 短信内容
		sb.append("<SmsContent>");
		sb.append(smsContent);
		sb.append("</SmsContent>");
		// 接收号码
		sb.append("<UserNumberList>");
		
		for (String phone : userNumberList) {
			sb.append("<RecPhone>");
			sb.append(phone);
			sb.append("</RecPhone>");
			
		}
		sb.append("</UserNumberList>");
		sb.append("</Body>");
		

		return sb.toString();
	}
	
	
	/**
	 *功能说明:将MAS返回信息转换成Map
	 *创建时间:2013-9-16 下午2:36:36
	 *@param result
	 *@return Map
	 * @throws Exception 
	 */
	@SuppressWarnings("rawtypes")
	public static Map submitSmsRespToMap(SubmitSmsResp result) throws Exception {
		log.info("MAS_将MAS返回信息转换成Map_开始");
		Map map = new HashMap();
		StringBuffer sb = new StringBuffer();
		try {
			//将MAS返回信息转换成String
			Header header = result.getHeader();
			String body = result.getBody();
			sb.append("<?xml version = \"1.0\" encoding=\"UTF-8\"?>\n")
					.append("<" + header.getMsgType() + ">\n")
					.append("<Header>\n")
					.append("<MsgType>" + header.getMsgType() + "</MsgType>\n")
					.append("<ServiceID>" + header.getServiceID()
							+ "</ServiceID>\n")
					.append("<TransationID>" + header.getTransationID()
							+ "</TransationID>\n")
					.append("<TimeStamp>" + header.getTimeStamp()
							+ "</TimeStamp>\n")
					.append("<Version>" + header.getVersion() + "</Version>\n")
					.append("</Header>\n");
			sb.append(HexString.decode(body));
			sb.append("\n</" + header.getMsgType() + ">\n");
			//将MAS返回信息转换成Map
			map = XMLConvertUtil.xmlElementsMas(sb.toString());
		} catch (Exception e) {
			log.error("MAS_XML转MAP出现异常:", e);
			throw e;
		}
		log.info("MAS_将MAS返回信息转换成Map_结束");
		return map;
	}
	
	
	
	

}
